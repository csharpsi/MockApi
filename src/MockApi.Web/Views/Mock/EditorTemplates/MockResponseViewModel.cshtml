@model MockApi.Web.ViewModels.MockResponseViewModel

@Html.AntiForgeryToken()

<div class="form-group">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
</div>

<div class="form-group @Html.AddClassIfInvalid(x => x.MockResponse.StatusCode)">
    @Html.LabelFor(x => x.MockResponse.StatusCode, new {@class = "control-label"})
    @Html.DropDownListFor(x => x.MockResponse.StatusCode, Html.ListOfStatusCodes(), "Select a status code", new {@class = "form-control"})
    @Html.ValidationMessageFor(x => x.MockResponse.StatusCode, "", new {@class = "text-danger"})
</div>

<div class="form-group @Html.AddClassIfInvalid(x => x.MockResponse.Data)">
    @Html.LabelFor(x => x.MockResponse.Data, new {@class = "control-label"})
    @Html.TextAreaFor(x => x.MockResponse.Data, new {@class = "form-control editor", rows = 10, cols = 10})
    @Html.ValidationMessageFor(x => x.MockResponse.Data, "", new {@class = "text-danger"})
</div>

<div class="form-group">
    <div class="col-md-12">
        <button type="submit" class="btn btn-success">Save</button>
        @Html.ActionLink("Go back", "Edit", new { id = Model.Mock.Id })
    </div>
</div>
