@model MockApi.Web.Models.MockResponse
    
<div class="form-group @Html.AddClassIfInvalid(x => x.StatusCode)">
    @Html.LabelFor(x => x.StatusCode, new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.DropDownListFor(x => x.StatusCode, Html.ListOfStatusCodes(Model.StatusCode), "Select a response status", new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.StatusCode, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group @Html.AddClassIfInvalid(x => x.Data)">
    @Html.LabelFor(x => x.Data, new {@class = "control-label col-md-2"})
    <div class="col-md-10">
        @Html.TextAreaFor(x => x.Data, new {@class = "form-control editor", rows = 10, cols = 24})
        @Html.ValidationMessageFor(x => x.Data, "", new {@class = "text-danger"})
    </div>

    <div class="checkbox">
        <label>
            Active Response?
            @Html.CheckBoxFor(x => x.IsActive)
        </label>
    </div>
</div>


